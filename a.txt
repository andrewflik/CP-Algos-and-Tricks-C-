
temp2.o:     file format elf64-x86-64


Disassembly of section .text:

0000000000000000 <_Z2f2ii>:
   0:	f3 0f 1e fa          	endbr64 
   4:	55                   	push   rbp
   5:	48 89 e5             	mov    rbp,rsp
   8:	48 83 ec 10          	sub    rsp,0x10
   c:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
   f:	89 75 f8             	mov    DWORD PTR [rbp-0x8],esi
  12:	48 8d 45 fc          	lea    rax,[rbp-0x4]
  16:	48 89 c6             	mov    rsi,rax
  19:	48 8d 3d 00 00 00 00 	lea    rdi,[rip+0x0]        # 20 <_Z2f2ii+0x20>
  20:	e8 00 00 00 00       	call   25 <_Z2f2ii+0x25>
  25:	48 89 c2             	mov    rdx,rax
  28:	48 8b 05 00 00 00 00 	mov    rax,QWORD PTR [rip+0x0]        # 2f <_Z2f2ii+0x2f>
  2f:	48 89 c6             	mov    rsi,rax
  32:	48 89 d7             	mov    rdi,rdx
  35:	e8 00 00 00 00       	call   3a <_Z2f2ii+0x3a>
  3a:	48 8d 45 f8          	lea    rax,[rbp-0x8]
  3e:	48 83 c0 04          	add    rax,0x4
  42:	c7 00 64 00 00 00    	mov    DWORD PTR [rax],0x64
  48:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
  4b:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
  4e:	01 d0                	add    eax,edx
  50:	c9                   	leave  
  51:	c3                   	ret    

0000000000000052 <_Z2f1ii>:
  52:	f3 0f 1e fa          	endbr64 
  56:	55                   	push   rbp
  57:	48 89 e5             	mov    rbp,rsp
  5a:	48 83 ec 10          	sub    rsp,0x10
  5e:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
  61:	89 75 f8             	mov    DWORD PTR [rbp-0x8],esi
  64:	48 8d 45 fc          	lea    rax,[rbp-0x4]
  68:	48 89 c6             	mov    rsi,rax
  6b:	48 8d 3d 00 00 00 00 	lea    rdi,[rip+0x0]        # 72 <_Z2f1ii+0x20>
  72:	e8 00 00 00 00       	call   77 <_Z2f1ii+0x25>
  77:	48 89 c2             	mov    rdx,rax
  7a:	48 8b 05 00 00 00 00 	mov    rax,QWORD PTR [rip+0x0]        # 81 <_Z2f1ii+0x2f>
  81:	48 89 c6             	mov    rsi,rax
  84:	48 89 d7             	mov    rdi,rdx
  87:	e8 00 00 00 00       	call   8c <_Z2f1ii+0x3a>
  8c:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
  8f:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
  92:	01 d0                	add    eax,edx
  94:	c9                   	leave  
  95:	c3                   	ret    

0000000000000096 <main>:
  96:	f3 0f 1e fa          	endbr64 
  9a:	55                   	push   rbp
  9b:	48 89 e5             	mov    rbp,rsp
  9e:	48 83 ec 10          	sub    rsp,0x10
  a2:	be 02 00 00 00       	mov    esi,0x2
  a7:	bf 01 00 00 00       	mov    edi,0x1
  ac:	e8 00 00 00 00       	call   b1 <main+0x1b>
  b1:	89 45 f8             	mov    DWORD PTR [rbp-0x8],eax
  b4:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
  b7:	89 c6                	mov    esi,eax
  b9:	48 8d 3d 00 00 00 00 	lea    rdi,[rip+0x0]        # c0 <main+0x2a>
  c0:	e8 00 00 00 00       	call   c5 <main+0x2f>
  c5:	48 89 c2             	mov    rdx,rax
  c8:	48 8b 05 00 00 00 00 	mov    rax,QWORD PTR [rip+0x0]        # cf <main+0x39>
  cf:	48 89 c6             	mov    rsi,rax
  d2:	48 89 d7             	mov    rdi,rdx
  d5:	e8 00 00 00 00       	call   da <main+0x44>
  da:	be 04 00 00 00       	mov    esi,0x4
  df:	bf 03 00 00 00       	mov    edi,0x3
  e4:	e8 00 00 00 00       	call   e9 <main+0x53>
  e9:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
  ec:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  ef:	89 c6                	mov    esi,eax
  f1:	48 8d 3d 00 00 00 00 	lea    rdi,[rip+0x0]        # f8 <main+0x62>
  f8:	e8 00 00 00 00       	call   fd <main+0x67>
  fd:	48 89 c2             	mov    rdx,rax
 100:	48 8b 05 00 00 00 00 	mov    rax,QWORD PTR [rip+0x0]        # 107 <main+0x71>
 107:	48 89 c6             	mov    rsi,rax
 10a:	48 89 d7             	mov    rdi,rdx
 10d:	e8 00 00 00 00       	call   112 <main+0x7c>
 112:	b8 00 00 00 00       	mov    eax,0x0
 117:	c9                   	leave  
 118:	c3                   	ret    

0000000000000119 <_Z41__static_initialization_and_destruction_0ii>:
 119:	f3 0f 1e fa          	endbr64 
 11d:	55                   	push   rbp
 11e:	48 89 e5             	mov    rbp,rsp
 121:	48 83 ec 10          	sub    rsp,0x10
 125:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
 128:	89 75 f8             	mov    DWORD PTR [rbp-0x8],esi
 12b:	83 7d fc 01          	cmp    DWORD PTR [rbp-0x4],0x1
 12f:	75 32                	jne    163 <_Z41__static_initialization_and_destruction_0ii+0x4a>
 131:	81 7d f8 ff ff 00 00 	cmp    DWORD PTR [rbp-0x8],0xffff
 138:	75 29                	jne    163 <_Z41__static_initialization_and_destruction_0ii+0x4a>
 13a:	48 8d 3d 00 00 00 00 	lea    rdi,[rip+0x0]        # 141 <_Z41__static_initialization_and_destruction_0ii+0x28>
 141:	e8 00 00 00 00       	call   146 <_Z41__static_initialization_and_destruction_0ii+0x2d>
 146:	48 8d 15 00 00 00 00 	lea    rdx,[rip+0x0]        # 14d <_Z41__static_initialization_and_destruction_0ii+0x34>
 14d:	48 8d 35 00 00 00 00 	lea    rsi,[rip+0x0]        # 154 <_Z41__static_initialization_and_destruction_0ii+0x3b>
 154:	48 8b 05 00 00 00 00 	mov    rax,QWORD PTR [rip+0x0]        # 15b <_Z41__static_initialization_and_destruction_0ii+0x42>
 15b:	48 89 c7             	mov    rdi,rax
 15e:	e8 00 00 00 00       	call   163 <_Z41__static_initialization_and_destruction_0ii+0x4a>
 163:	90                   	nop
 164:	c9                   	leave  
 165:	c3                   	ret    

0000000000000166 <_GLOBAL__sub_I__Z2f2ii>:
 166:	f3 0f 1e fa          	endbr64 
 16a:	55                   	push   rbp
 16b:	48 89 e5             	mov    rbp,rsp
 16e:	be ff ff 00 00       	mov    esi,0xffff
 173:	bf 01 00 00 00       	mov    edi,0x1
 178:	e8 9c ff ff ff       	call   119 <_Z41__static_initialization_and_destruction_0ii>
 17d:	5d                   	pop    rbp
 17e:	c3                   	ret    
